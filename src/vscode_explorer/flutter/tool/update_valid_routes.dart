import 'dart:io';

void main() {
  final routeConfigFile = File('lib/route/route_configuration.dart');
  final validRoutesFile = File('lib/route/valid_routes.dart');

  if (!routeConfigFile.existsSync()) {
    print('❌ Error: route_configuration.dart not found.');
    exit(1);
  }

  final content = routeConfigFile.readAsStringSync();

  // ✅ 改良的 Regex，支援跨行
  final regex = RegExp(
    r'const\s+String\s+(ROUTE_[A-Z0-9_]+)\s*=\s*[\s\S]*?routeName\s*;',
    multiLine: true,
  );

  final matches = regex.allMatches(content);
  final newRoutes = matches.map((m) => m.group(1)!).toSet()
    ..removeWhere((e) => e.trim().isEmpty);

  // ✅ 讀取舊的 validRoutes
  final previousRoutes = <String>{};
  if (validRoutesFile.existsSync()) {
    final oldContent = validRoutesFile.readAsStringSync();
    final oldRegex = RegExp(r'ROUTE_[A-Z0-9_]+');
    previousRoutes
        .addAll(oldRegex.allMatches(oldContent).map((m) => m.group(0)!));
  }

  // ✅ 比對差異
  final added = newRoutes.difference(previousRoutes).toList()..sort();
  final removed = previousRoutes.difference(newRoutes).toList()..sort();

  // ✅ 輸出變更摘要
  if (added.isEmpty && removed.isEmpty) {
    print('✅ No route changes detected.');
  } else {
    print('📝 Route changes detected:');
    if (added.isNotEmpty) print('➕ Added: ${added.join(', ')}');
    if (removed.isNotEmpty) print('➖ Removed: ${removed.join(', ')}');
  }

  // ✅ 產生新檔案內容
  final buffer = StringBuffer();
  buffer
      .writeln('// This file is auto-generated by generate_valid_routes.dart.');
  buffer.writeln('// Do not modify this file manually.\n');
  buffer.writeln(
      '// Manual run "dart run tool/generate_valid_routes.dart" .\n\n');
  buffer.writeln(
      'import \'package:owlpay_cash/route/route_configuration.dart\';\n');
  buffer.writeln('final List<String> validRoutes = [');
  for (final route in newRoutes.toList()
    ..toList()
    ..sort()) {
    buffer.writeln('  $route,');
  }
  buffer.writeln('];');

  // ✅ 寫入檔案
  validRoutesFile.writeAsStringSync(buffer.toString());
  print('✅ valid_routes.dart regenerated with ${newRoutes.length} routes.');
  // path
  print('📂 File written to: ${validRoutesFile.path}');
  // ✅ Optional：如果有變更但 CI 要檢查 commit 沒跟上，就加上退出碼
  if ((added.isNotEmpty || removed.isNotEmpty) &&
      Platform.environment['CI'] == 'true') {
    print(
        '❗ Detected unsynced route changes. Please commit updated valid_routes.dart.');
    exit(2); // 讓 CI 報錯
  }
}
